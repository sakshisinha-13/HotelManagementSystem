{"ast":null,"code":"import { getVisits, getCompletedBookings, getDraftBookings } from \"./userActivity\";\nexport function generateRecommendations(filteredHotels) {\n  const visits = getVisits();\n  const completed = getCompletedBookings();\n  const drafts = getDraftBookings();\n  const activityIds = new Set([...Object.keys(visits).map(Number), ...completed.map(h => h.hotel_id), ...drafts.map(h => h.hotel_id)]);\n  const visitedHotels = filteredHotels.filter(h => activityIds.has(h.hotel_id));\n  const recSet = new Set();\n  visitedHotels.forEach(vh => {\n    filteredHotels.forEach(hotel => {\n      if (!activityIds.has(hotel.hotel_id) && (hotel.city === vh.city || Math.round(hotel.star_rating) === Math.round(vh.star_rating))) {\n        recSet.add(hotel);\n      }\n    });\n  });\n\n  // Add top-rated hotels within filteredHotels\n  const topRated = filteredHotels.filter(hotel => hotel.rating_average >= 8.5);\n  topRated.forEach(hotel => {\n    if (!activityIds.has(hotel.hotel_id)) recSet.add(hotel);\n  });\n  return Array.from(recSet).slice(0, 5);\n}","map":{"version":3,"names":["getVisits","getCompletedBookings","getDraftBookings","generateRecommendations","filteredHotels","visits","completed","drafts","activityIds","Set","Object","keys","map","Number","h","hotel_id","visitedHotels","filter","has","recSet","forEach","vh","hotel","city","Math","round","star_rating","add","topRated","rating_average","Array","from","slice"],"sources":["C:/Users/ASUS/Desktop/projects/HotelManagementSystem/HotelManagementSystem/HotelBookingPlatform/client/src/utils/recommendations.js"],"sourcesContent":["import { getVisits, getCompletedBookings, getDraftBookings } from \"./userActivity\";\r\n\r\nexport function generateRecommendations(filteredHotels) {\r\n  const visits = getVisits();\r\n  const completed = getCompletedBookings();\r\n  const drafts = getDraftBookings();\r\n\r\n  const activityIds = new Set([\r\n    ...Object.keys(visits).map(Number),\r\n    ...completed.map(h => h.hotel_id),\r\n    ...drafts.map(h => h.hotel_id),\r\n  ]);\r\n\r\n  const visitedHotels = filteredHotels.filter(h => activityIds.has(h.hotel_id));\r\n  const recSet = new Set();\r\n\r\n  visitedHotels.forEach(vh => {\r\n    filteredHotels.forEach(hotel => {\r\n      if (\r\n        !activityIds.has(hotel.hotel_id) &&\r\n        (hotel.city === vh.city || Math.round(hotel.star_rating) === Math.round(vh.star_rating))\r\n      ) {\r\n        recSet.add(hotel);\r\n      }\r\n    });\r\n  });\r\n\r\n  // Add top-rated hotels within filteredHotels\r\n  const topRated = filteredHotels.filter(hotel => hotel.rating_average >= 8.5);\r\n  topRated.forEach(hotel => {\r\n    if (!activityIds.has(hotel.hotel_id)) recSet.add(hotel);\r\n  });\r\n\r\n  return Array.from(recSet).slice(0, 5);\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,oBAAoB,EAAEC,gBAAgB,QAAQ,gBAAgB;AAElF,OAAO,SAASC,uBAAuBA,CAACC,cAAc,EAAE;EACtD,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAMM,SAAS,GAAGL,oBAAoB,CAAC,CAAC;EACxC,MAAMM,MAAM,GAAGL,gBAAgB,CAAC,CAAC;EAEjC,MAAMM,WAAW,GAAG,IAAIC,GAAG,CAAC,CAC1B,GAAGC,MAAM,CAACC,IAAI,CAACN,MAAM,CAAC,CAACO,GAAG,CAACC,MAAM,CAAC,EAClC,GAAGP,SAAS,CAACM,GAAG,CAACE,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,EACjC,GAAGR,MAAM,CAACK,GAAG,CAACE,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,CAC/B,CAAC;EAEF,MAAMC,aAAa,GAAGZ,cAAc,CAACa,MAAM,CAACH,CAAC,IAAIN,WAAW,CAACU,GAAG,CAACJ,CAAC,CAACC,QAAQ,CAAC,CAAC;EAC7E,MAAMI,MAAM,GAAG,IAAIV,GAAG,CAAC,CAAC;EAExBO,aAAa,CAACI,OAAO,CAACC,EAAE,IAAI;IAC1BjB,cAAc,CAACgB,OAAO,CAACE,KAAK,IAAI;MAC9B,IACE,CAACd,WAAW,CAACU,GAAG,CAACI,KAAK,CAACP,QAAQ,CAAC,KAC/BO,KAAK,CAACC,IAAI,KAAKF,EAAE,CAACE,IAAI,IAAIC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,WAAW,CAAC,KAAKF,IAAI,CAACC,KAAK,CAACJ,EAAE,CAACK,WAAW,CAAC,CAAC,EACxF;QACAP,MAAM,CAACQ,GAAG,CAACL,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAMM,QAAQ,GAAGxB,cAAc,CAACa,MAAM,CAACK,KAAK,IAAIA,KAAK,CAACO,cAAc,IAAI,GAAG,CAAC;EAC5ED,QAAQ,CAACR,OAAO,CAACE,KAAK,IAAI;IACxB,IAAI,CAACd,WAAW,CAACU,GAAG,CAACI,KAAK,CAACP,QAAQ,CAAC,EAAEI,MAAM,CAACQ,GAAG,CAACL,KAAK,CAAC;EACzD,CAAC,CAAC;EAEF,OAAOQ,KAAK,CAACC,IAAI,CAACZ,MAAM,CAAC,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
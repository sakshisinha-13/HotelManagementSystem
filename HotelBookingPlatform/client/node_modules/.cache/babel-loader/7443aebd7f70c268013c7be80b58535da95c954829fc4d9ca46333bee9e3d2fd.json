{"ast":null,"code":"import { getVisits, getCompletedBookings, getDraftBookings } from \"./userActivity\";\nexport function generateRecommendations(filteredHotels, allHotels) {\n  const visits = getVisits();\n  const completed = getCompletedBookings();\n  const drafts = getDraftBookings();\n  const activityIds = new Set([...Object.keys(visits).map(Number), ...completed.map(h => h.hotel_id), ...drafts.map(h => h.hotel_id)]);\n\n  // ✅ Get activity hotels from full data (not just filtered)\n  const activityHotels = allHotels.filter(h => activityIds.has(h.hotel_id));\n\n  // ✅ Extract cities from visited/drafted/booked hotels\n  const visitedCities = new Set(activityHotels.map(h => h.city));\n  const recSet = new Set();\n  filteredHotels.forEach(hotel => {\n    if (!activityIds.has(hotel.hotel_id) && visitedCities.has(hotel.city)) {\n      recSet.add(hotel);\n    }\n  });\n\n  // ✅ Fallback: top-rated hotels within filtered list\n  const topRated = filteredHotels.filter(hotel => hotel.rating_average >= 8.5);\n  topRated.forEach(hotel => {\n    if (!activityIds.has(hotel.hotel_id)) recSet.add(hotel);\n  });\n  return Array.from(recSet).slice(0, 5);\n}","map":{"version":3,"names":["getVisits","getCompletedBookings","getDraftBookings","generateRecommendations","filteredHotels","allHotels","visits","completed","drafts","activityIds","Set","Object","keys","map","Number","h","hotel_id","activityHotels","filter","has","visitedCities","city","recSet","forEach","hotel","add","topRated","rating_average","Array","from","slice"],"sources":["C:/Users/ASUS/Desktop/projects/HotelManagementSystem/HotelManagementSystem/HotelBookingPlatform/client/src/utils/recommendations.js"],"sourcesContent":["import { getVisits, getCompletedBookings, getDraftBookings } from \"./userActivity\";\r\n\r\nexport function generateRecommendations(filteredHotels, allHotels) {\r\n  const visits = getVisits();\r\n  const completed = getCompletedBookings();\r\n  const drafts = getDraftBookings();\r\n\r\n  const activityIds = new Set([\r\n    ...Object.keys(visits).map(Number),\r\n    ...completed.map(h => h.hotel_id),\r\n    ...drafts.map(h => h.hotel_id),\r\n  ]);\r\n\r\n  // ✅ Get activity hotels from full data (not just filtered)\r\n  const activityHotels = allHotels.filter(h => activityIds.has(h.hotel_id));\r\n\r\n  // ✅ Extract cities from visited/drafted/booked hotels\r\n  const visitedCities = new Set(activityHotels.map(h => h.city));\r\n\r\n  const recSet = new Set();\r\n\r\n  filteredHotels.forEach(hotel => {\r\n    if (\r\n      !activityIds.has(hotel.hotel_id) &&\r\n      visitedCities.has(hotel.city)\r\n    ) {\r\n      recSet.add(hotel);\r\n    }\r\n  });\r\n\r\n  // ✅ Fallback: top-rated hotels within filtered list\r\n  const topRated = filteredHotels.filter(hotel => hotel.rating_average >= 8.5);\r\n  topRated.forEach(hotel => {\r\n    if (!activityIds.has(hotel.hotel_id)) recSet.add(hotel);\r\n  });\r\n\r\n  return Array.from(recSet).slice(0, 5);\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,oBAAoB,EAAEC,gBAAgB,QAAQ,gBAAgB;AAElF,OAAO,SAASC,uBAAuBA,CAACC,cAAc,EAAEC,SAAS,EAAE;EACjE,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,SAAS,GAAGN,oBAAoB,CAAC,CAAC;EACxC,MAAMO,MAAM,GAAGN,gBAAgB,CAAC,CAAC;EAEjC,MAAMO,WAAW,GAAG,IAAIC,GAAG,CAAC,CAC1B,GAAGC,MAAM,CAACC,IAAI,CAACN,MAAM,CAAC,CAACO,GAAG,CAACC,MAAM,CAAC,EAClC,GAAGP,SAAS,CAACM,GAAG,CAACE,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,EACjC,GAAGR,MAAM,CAACK,GAAG,CAACE,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC,CAC/B,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAGZ,SAAS,CAACa,MAAM,CAACH,CAAC,IAAIN,WAAW,CAACU,GAAG,CAACJ,CAAC,CAACC,QAAQ,CAAC,CAAC;;EAEzE;EACA,MAAMI,aAAa,GAAG,IAAIV,GAAG,CAACO,cAAc,CAACJ,GAAG,CAACE,CAAC,IAAIA,CAAC,CAACM,IAAI,CAAC,CAAC;EAE9D,MAAMC,MAAM,GAAG,IAAIZ,GAAG,CAAC,CAAC;EAExBN,cAAc,CAACmB,OAAO,CAACC,KAAK,IAAI;IAC9B,IACE,CAACf,WAAW,CAACU,GAAG,CAACK,KAAK,CAACR,QAAQ,CAAC,IAChCI,aAAa,CAACD,GAAG,CAACK,KAAK,CAACH,IAAI,CAAC,EAC7B;MACAC,MAAM,CAACG,GAAG,CAACD,KAAK,CAAC;IACnB;EACF,CAAC,CAAC;;EAEF;EACA,MAAME,QAAQ,GAAGtB,cAAc,CAACc,MAAM,CAACM,KAAK,IAAIA,KAAK,CAACG,cAAc,IAAI,GAAG,CAAC;EAC5ED,QAAQ,CAACH,OAAO,CAACC,KAAK,IAAI;IACxB,IAAI,CAACf,WAAW,CAACU,GAAG,CAACK,KAAK,CAACR,QAAQ,CAAC,EAAEM,MAAM,CAACG,GAAG,CAACD,KAAK,CAAC;EACzD,CAAC,CAAC;EAEF,OAAOI,KAAK,CAACC,IAAI,CAACP,MAAM,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}